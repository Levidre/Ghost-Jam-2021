
//-- Template's Surfaces --------------------------------------------------

//Default
surface0
{
//Basic
element0,overlay,surface0.png,0,0

//Typing
10interval,talk,1
10pattern0,0,0,alternativestart,[11]

11interval,never
11pattern0,1100,3-7,overlay,0,0
11pattern1,1101,3,overlay,0,0

//Hats
//100interval,bind
//100pattern0,100,0,add,0,0
//101interval,bind
//101pattern0,101,0,add,0,0
//102interval,bind
//102pattern0,102,0,add,0,0

//Skins
//200interval,bind
//200pattern0,200,0,add,0,0
//201interval,bind
//201pattern0,201,0,add,0,0
//202interval,bind
//202pattern0,202,0,add,0,0

//Pets
//300interval,bind
//300pattern0,300,0,add,0,0
//301interval,bind
//301pattern0,301,0,add,0,0
//302interval,bind
//302pattern0,302,0,add,0,0
}

//Happy
surface1
{
element0,overlay,surface1001.png,0,0

//Typing
12interval,talk,1
12pattern0,0,0,alternativestart,[13]

13interval,never
13pattern0,1102,3-7,overlay,0,0
13pattern1,1103,3,overlay,0,0
}

//Mad
surface2
{
element0,overlay,surface1002.png,0,0

//Typing
14interval,talk,1
14pattern0,0,0,alternativestart,[15]

15interval,never
15pattern0,1100,3-7,overlay,0,0
15pattern1,1101,3,overlay,0,0
}

//Scared
surface3
{
element0,overlay,surface1003.png,0,0

//Typing
16interval,talk,1
16pattern0,0,0,alternativestart,[17]

17interval,never
17pattern0,1100,3-7,overlay,0,0
17pattern1,1101,3,overlay,0,0
}

//Disappointed
surface4
{
element0,overlay,surface1004.png,0,0

//Typing
18interval,talk,1
18pattern0,0,0,alternativestart,[19]

19interval,never
19pattern0,1100,3-7,overlay,0,0
19pattern1,1101,3,overlay,0,0
}

//Stunned
surface5
{
element0,overlay,surface1005.png,0,0

//Typing
20interval,talk,1
20pattern0,0,0,alternativestart,[21]

21interval,never
21pattern0,1102,3-7,overlay,0,0
21pattern1,1103,3,overlay,0,0
}

//Blush
surface6
{
element0,overlay,surface1006.png,0,0

//Typing
22interval,talk,1
22pattern0,0,0,alternativestart,[23]

23interval,never
23pattern0,1100,3-7,overlay,0,0
23pattern1,1101,3,overlay,0,0
}

//Confused
surface7
{
element0,overlay,surface1007.png,0,0

//Typing
24interval,talk,1
24pattern0,0,0,alternativestart,[25]

25interval,never
25pattern0,1100,3-7,overlay,0,0
25pattern1,1101,3,overlay,0,0
}

//Thinking
surface8
{
element0,overlay,surface1008.png,0,0

//Typing
26interval,talk,1
26pattern0,0,0,alternativestart,[27]

27interval,never
27pattern0,1100,3-7,overlay,0,0
27pattern1,1101,3,overlay,0,0
}

//Determined
surface9
{
element0,overlay,surface1009.png,0,0

//Typing
28interval,talk,1
28pattern0,0,0,alternativestart,[29]

29interval,never
29pattern0,1100,3-7,overlay,0,0
29pattern1,1101,3,overlay,0,0
}

//Wonder
surface11
{
element0,overlay,surface1011.png,0,0
}

//Mischief
surface12
{
element0,overlay,surface1012.png,0,0
}

//Impostor-Happy
surface13
{
element0,overlay,surface1013.png,0,0
}

//Impostor-Mad
surface14
{
element0,overlay,surface1014.png,0,0
}

//Impostor-Scared
surface15
{
element0,overlay,surface1015.png,0,0
}

//Impostor-Disappointed
surface16
{
element0,overlay,surface1016.png,0,0
}

//Impostor-Stunned
surface17
{
element0,overlay,surface1017.png,0,0
}

//Impostor-Blush
surface18
{
element0,overlay,surface1018.png,0,0
}

//Impostor-Confused
surface19
{
element0,overlay,surface1019.png,0,0
}

//Impostor-Thinking
surface20
{
element0,overlay,surface1020.png,0,0
}

//Impostor-Determined
surface21
{
element0,overlay,surface1021.png,0,0
}

//Impostor-Wonder
surface22
{
element0,overlay,surface1022.png,0,0
}

//Impostor-Mischief
surface23
{
element0,overlay,surface1023.png,0,0
}

//Impostor-Murdery
surface24
{
element0,overlay,surface1024.png,0,0
}


//Empty
surface10
{
element0,overlay,surface10.png,0,0
}




//---------------------------Surfaces.txt--------------------------
//Blegh alright here we go. Surfaces.txt is the backbone of the shell you make for your ghost. Making the images isn't enough, a ghost needs something to tell it where those images go and how to display them, and that's where surfaces.txt comes in.

//Images are brought together into a thing I generally refer to as a pose, but what is defined in the shell and this text file as a Surface. Each Surface can contain any number of images in it doing any number of things. These Surfaces are what is being called when you use the \s[] tag when writing dialogue. For example, you could create a pose with three images under Surface5, and then in dialogue, you would call that pose made of three images with \s[5]. That's the basic jist of how this file works.
//I wrote up some pages about making images and surfaces.txt on the walkthrough (http://www.ashido.com/ukagaka/walkthrough.html) so I highly recommend you read those as well.

//I will reiterate that you should be editing these in Notepad++, and in particular, you should set the Language to C (or Java I guess) to properly highlight all the text. It will make things A LOT EASIER for you, trust me! It will also help you keep track of your brackets in case you forget some. If you click on a line with a bracket in Notepad++, it should highlight where the other bracket ends, or turn purple if there's no finishing bracket (which you should definitely fix!)
//It will also highlight my commented lines in green, so you'll know where they are. Any line beginning with // is a commented line that the code will not read. It's just for your reference!

//There are a lot of crazy tricks you can do with surfaces.txt if you're creative and determined, but you won't have to worry about any of them (although I will include some commented out examples for my own reference). The easiest, easiest way to do this file is simply to replace the images I've already made. There should be around 10 poses for each character defined in surfaces.txt. They break down like this.

//0 - Girl's default pose. This is made up of a few images.
	//surface0.png, her full default frame with her eyes and mouth in place to layer stuff on.
	//surface1001.png, her half-closed eyes
	//surface1002.png, her closed eyes. These two frames are used to make her blinking animation.
	//surface1101.png, her half-open mouth
	//surface1102.png, her open mouth. These two frames are used for her talking animation.
//1 - Girl's embarrassed pose. done
	//From here on, each pose is a single still image. This is surface1501.png
//2 - Girl's surprised pose.
	//surface1502.png done
//3 - Girl's worried pose.
	//surface1503.png
//4 - Girl's sad/disappointed pose.
	//surface1504.png done
//5 - Girl's smiling pose.
	//surface1505.png done
//6 - Girl's contented pose.
	//surface1506.png done
//7 - Girl's angry pose.
	//surface1507.png
//8 - Girl's thoughtful pose.
	//surface1508.png done
//9 - Girl's bored pose.
	//surface1509.png
//10 - Triangle's default pose. Like Girl, this pose is broken up into multiple pieces because it has an animation.
	//surface10.png, his default base frame to layer stuff on.
	//surface2001.png, his half-closed eyes.
	//surface2002.png, his closed eyes. These are for his blinking animation.
//11 - Triangle's embarrassed pose. Like above, these are single still frames.
	//surface2501.png  done
//12 - Triangle's surprised pose.
	//surface2502.png done
//13 - Triangle's worried pose.
	//surface2503.png done
//14 - Triangle's sad/disappointed pose.
	//surface2504.png done
//15 - Triangle's smiling pose.
	//surface2505.png done
//16 - Triangle's contented pose.
	//surface2506.png done
//17 - Triangle's angry pose.
	//surface2507.png
//18 - Triangle's thoughtful pose.
	//surface2508.png done
//19 - Triangle's bored pose.
	//surface2509.png done

//If you look at the image files themselves, you'll see that all the images for Girl are in the 1000 range, and the images for Triangle are in the 2000. ALL YOU NEED TO DO is draw your character with whatever expression you want and save it over the appropriate file. That way, you won't have to adjust any of the coding in surfaces.txt itself, you'll just be replacing the images. You should read through this file anyway though to get an idea of how it works.

//However, there is one snag here! Girl's default pose has blinking eyes and a moving mouth, and for that, you'll need to study the files for that pose very carefully. Note that the different eye frames and mouth frames are separate files and only have the eyes and the mouths in them. You'll have to do the same. All you have to do is select around your eyes, inverse, delete everything, and save it for each eye frame, and likewise for the mouth frames. I talk about this in a bit more detail in the making images section of the walkthrough page. Hopefully it won't be too hard. If worse comes to worse and you just can't get it to work, you can delete the blinking and talking sequences from surface0 if you have to.
//(Basically, what surfaces.txt does is overlay the mouth or eye frames on top of your base image to make the animation. That's why all you want in that overlaid frame is the eyes or the mouth.)
//Likewise, if you want to add blinking eyes and a moving mouth to your other poses, you'll have to do the same thing as with the default pose - make individual frames for the eyes and mouth, copy and paste the code for the blinking/mouth sections in surface0 to the other surface you want to add them to, and replace the file numbers where appropriate.

//You can change the size of the images if you want to draw a much bigger character than I did! If you do that though, MAKE SURE ALL YOUR IMAGES FOR THAT CHARACTER ARE THE SAME SIZE. So if Girl's image dimensions are 400x400, and you draw a Main Character that's 800x800, MAKE SURE ALL the images for your main character are also 800x800! This applies to the side character too, ALL the images for your side character should be the same dimensions! If your side character is 250x250, all side character images should be 250x250!
//The main character and the side character DON'T have to be the same size though, so you can have a tiny sidekick and a huge dude if you want, like... I dunno, Gillian Seed and Metal Gear Mk. II for example, or Torin and Boggle. The image dimensions just need to be consistent throughout for each character, because believe me, it will make things MUCH, MUCH easier for you from this point on if you do that.

//SAVE ALL IMAGES FOR YOUR MAIN CHARACTER IN THE 1000-1999 RANGE, AND SAVE ALL IMAGES FOR YOUR SECOND CHARACTER IN THE 2000-2999 RANGE. Not to get into the exact reason why right now but just trust me, this will save you a headache in the long run. I'm looking at you, self reading this in the future. 

//ONE MORE NOTE - If you are planning on doing a single person ghost without a sidekick character at all, all you have to do is save a blank png over all the files for the secondary character, ESPECIALLY Surface10.png. Then just don't write any dialogue for the secondary character in the .dic files. Problem solved.
//More advanced users can even rewrite the poses in this file originally intended for the secondary character, 11-19, for their main character instead if you need to and save main character poses over the second character ones, AS LONG AS Surface10.png is blank.


//Alright, now let's get into the coding.


//--surface.append-------------------------------------------------------------------
//This function is primarily for advanced users, so you can skip it if it seems too scary to you. Otherwise, read on. It may be useful.

//Surface.append basically applies the coding within the brackets to the poses specified in the number range. Specifically in this case it applies to collisions. If the collision areas for your ghost don't change very much from pose to pose, then you can set them here for multiple surfaces at once and save yourself some time.
//I'm not actually going to use surface.append since Girl and Triangle move around too much for their collisions to be that consistent between poses, but it's something could potentially come in handy for advanced users or ghost makers who have very stationary ghosts, so I'll leave it here and just append it to surfaces that don't exist so it won't get in the way. If you want to use this, study this example and see how it can apply to your own ghost.

//surface.append0-2,4-7,9
//{
//16interval,talk
//16pattern0,0,0,alternativestart,[17.18.19]
//}

//surface.append4,6,9
//{
//9interval,random,4
//9pattern0,-1,15,overlay,0,0
//9pattern1,1009,10,overlayfast,0,0
//9pattern2,1008,15,overlayfast,0,0
//9pattern3,-1,5,overlay,0,0
//}

//surface.append2,5,7
//{
//9interval,random,4
//9pattern0,-1,15,overlay,0,0
//9pattern1,1209,10,overlayfast,0,0
//9pattern2,1208,15,overlayfast,0,0
//9pattern3,-1,5,overlay,0,0
//}





//And that's it! We're done! You can move on to some other aspect of your ghost now. But before we go, there are a few more little things you may want to think about.


//--Unique Collision cursors------------------

//If you messed with the default Emily ghost at all, you may have noticed that when your cursor was over her chest, it changed to a sort of gripping hand instead of a pointer finger. "How do I do that?" you may wonder. Setting up sakura.cursor is how!

//sakura.cursor 
//{ 
//mouseup0,Head,system:hand 
//mousedown0,Head,system:finger 
//mouseup1,Face,system:hand 
//mousedown1,Face,system:grip 
//} 

//What this does is change the mouse cursor. You can see it's split into mouseup and mousedown, and it uses the names you gave your Collisions up there. So when the mouse is hovering over Girl's head, it uses the system cursor that looks like a hand. When you click and hold, it looks like a finger. You can uncomment these lines to see for yourself. Likewise, when you hover your mouse over Girl's face, it looks like a hand, and when you click down, it looks like a gripping hand. You can keep adding unique cursors for all your collisions by sequentially numbering them, like mouseup/down2, mouseup/down3, and so on.

//The system cursors you can use for this are "arrow", "cross", "no", "hand", "grip", "finger", "wait", "text", "move", and "help". You can probably guess at what they look like. Feel free to use whatever cursor you think would best match your collision.

//To set this up for the secondary character, just change sakura to kero, as usual.


//--Tooltips------------------

//Maybe you'd like a tooltip to pop up when your user is hovering over a hitbox on your ghost. It works much the same as above!

//sakura.tooltips 
//{ 
//Head,This is Girl's head. 
//Face,This is Girl's face.  
//}

//Basically put the name of your collision first, then what you want the tooltip to say. Uncomment this function and hover over Girl's hotspots and you can see how it works. It may be handy for warning your users about punching your ghost or something, or for silly reasons, I dunno. It's up to you!
//Like above, replace sakura with kero for the secondary character.


//--Surface.alias------------------


//There is another function along the same lines of surface.append and it's surface.alias. What it does is assign a range of numbers to a single number or word that can be called using \s[]. So here's an example.

//sakura.surface.alias
//{
//6666,[1229,1230,1231,1235]
//}

//What this means is that I could then go \s[6666] in dialogue and it would call any of these four Surfaces in the brackets. You can do words as well, like creepy,[1229,1230,1231,1235], and then you could call it with \s[creepy]. This may sound like a convenient shortcut to using words instead of numbers for your ghost's expressions, but I'd probably stick with numbers, really. It just feels like it'd backfire on you eventually.
//You can do the same thing with the side character by using kero instead of sakura.

//kero.surface.alias
//{
//6667,[1228,1232,1233]
//6668,[1228,1232,1233,1234]
//}
//And as you can see, you can have multiple surface aliases set up at any point. In this example, kero has both 6667 and 6668 defined as a range of Surfaces. So \s[6667] would call one of those three Surfaces, and \s[6668] would call one of those four Surfaces.

//---

//Now, if you don't think this is enough Surfaces and want to add more, all you have to do is copy and paste a chunk of Surface code, give it a new number, and then do whatever you want with it. You can define Surfaces all the way up to 999 without running into problems, so go crazy with them if you want! Some of my ghosts have a ridiculous amount of Surfaces because I have no self-control.
//Of course, to add new poses, you need to draw new frames for those poses. And I say again, make sure all your frames for a character are the same size if you can! It's so much easier to just put 0,0 than find specific coordinates. Unless you've run into the replace problem with mouths, in which case there's not much you can do about that.
//Once you add a new pose, save your surfaces.txt file and reload your shell using the Development Panel Reload option, or by just reloading your ghost entirely via Utilities - Reload Ghost. You can use Surface Test in the Development Panel to check your new Surface and see if it works and looks right! I always recommend testing your Surfaces, and it's usually pretty easy and simple. If it doesn't look right, tweak surfaces.txt, save, and try again.

//The length of this file is limited only by your imagination!